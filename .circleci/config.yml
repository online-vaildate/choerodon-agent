default: &default
  docker:
  - image: circleci/golang:1.8

version: 2
jobs:
  go_test:
    <<: *default
    working_directory: $GOPATH/src/github.com/choerodon

    steps:
      - checkout
      - run: go get -u github.com/golang/dep/cmd/dep
      - run: go init
      - run: dep ensure
      - run: go test ./...
  
  docker_build:
    <<: *default
    working_directory: $GOPATH/src/github.com/choerodon
    steps:
      - setup_remote_docker:
            version: 17.05.0-ce
      - checkout
      - attach_workspace:
          at: .
      - run: |
          export CI_COMMIT_TAG=$(GetVersion)
          docker login -u ${REGISTRY_USER} -p ${REGISTRY_PASSWORD}
          docker build --pull -t ${DOCKER_GROUP_NAME}/${CIRCLE_PROJECT_REPONAME}:${CI_COMMIT_TAG} src/main/docker
          docker push ${DOCKER_GROUP_NAME}/${CIRCLE_PROJECT_REPONAME}:${CI_COMMIT_TAG}
  helm_chart_build:
    <<: *default
    steps:
      - checkout
      - run: |
          export CI_COMMIT_TAG=$(GetVersion)
          CHART_PATH=`find . -name Chart.yaml`
          yq w -i ${CHART_PATH%/*}/values.yaml image.repository ${DOCKER_GROUP_NAME}/${CIRCLE_PROJECT_REPONAME}
          yq w -i ${CHART_PATH%/*}/values.yaml image.tag ${CI_COMMIT_TAG}
          helm repo add choerodon "${CHART_REPOSITORY}/${CHART_ORGANIZATION}/${CHART_PROJECT}/"
          helm push --username ${HELM_USER} --password ${HELM_PASSWORD} ${CHART_PATH%/*} --version ${CI_COMMIT_TAG} choerodon
workflows:
  version: 2
  release:
    jobs:
      - go_test:
          context: org-global
          filters:
            tags:
              only: /^.*/
            branches:
              only:
                - /^release-.*$/
                - /^hotfix-.*$/
      - docker_build:
          context: org-global
          requires:
          - maven_build
          filters:
            tags:
              only: /^.*/
            branches:
              only:
                - /^release-.*$/
                - /^hotfix-.*$/
      - helm_chart_build:
          context: org-global
          requires:
          - maven_build
          - docker_build
          filters:
            tags:
              only: /^.*/
            branches:
              only:
                - /^release-.*$/
                - /^hotfix-.*$/
  daily:
    jobs:
      - go_test:
          context: org-global
          filters:
            branches:
              only: 
               - /^.*$/